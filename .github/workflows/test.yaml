on:
  workflow_call:

jobs:
  test:
    name: Test with coverage
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: requirements/test.pip

      - name: Install dependencies
        run: pip install -r requirements/test.pip

      # Suffix the generated coverage datafile with the name of the runner's OS.
      - name: Run tests
        id: run_tests
        run: pytest --cov=lispyc -n auto
        env:
          COVERAGE_DATAFILE: .coverage.${{ matrix.os }}

      # Upload it so the coverage from all matrix jobs can be combined later.
      - name: Upload coverage data
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: .coverage.*
          retention-days: 1

  report:
    name: Report coverage
    runs-on: ubuntu-20.04
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: requirements/coveralls.pip

      - name: Install dependencies
        run: pip install -r requirements/coveralls.pip

      - name: Download coverage data
        uses: actions/download-artifact@v2
        with:
          name: coverage

      - name: Combine coverage data
        run: coverage combine .coverage.*

      - name: Display coverage report
        run: coverage report -m

      # Comment on the PR with the coverage results and register a GitHub check
      # which links to the coveralls.io job.
      - name: Publish coverage report to coveralls.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls --service=github
